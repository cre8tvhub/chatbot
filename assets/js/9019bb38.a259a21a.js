"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9249],{48829:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>c});var a=t(85893),o=t(11151);const i={},r="Pipelines",s={id:"evaluation/pipeline",title:"Pipelines",description:"You can use pipelines to run a series of commands together.",source:"@site/docs/evaluation/pipeline.md",sourceDirName:"evaluation",slug:"/evaluation/pipeline",permalink:"/chatbot/evaluation/pipeline",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb/chatbot/tree/main/docs/docs/evaluation/pipeline.md",tags:[],version:"current",frontMatter:{},sidebar:"main",previous:{title:"Configuration Reference",permalink:"/chatbot/evaluation/configuration-reference"},next:{title:"API Reference",permalink:"/chatbot/reference/"}},l={},c=[{value:"Run Pipelines",id:"run-pipelines",level:2},{value:"Examples",id:"examples",level:2}];function u(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.a)(),...n.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.h1,{id:"pipelines",children:"Pipelines"}),"\n",(0,a.jsx)(e.p,{children:"You can use pipelines to run a series of commands together.\nThis is useful for automating evaluation tasks."}),"\n",(0,a.jsx)(e.p,{children:"You can also use pipelines to run multiple commands in sequence in a CI environment.\nFor example, you might want to run a pipeline of commands every day."}),"\n",(0,a.jsx)(e.h2,{id:"run-pipelines",children:"Run Pipelines"}),"\n",(0,a.jsxs)(e.p,{children:["You can run pipelines with the ",(0,a.jsx)(e.a,{href:"/chatbot/reference/evaluation/modules#runpipeline",children:(0,a.jsx)(e.code,{children:"runPipeline()"})})," function."]}),"\n",(0,a.jsxs)(e.p,{children:[(0,a.jsx)(e.code,{children:"runPipeline()"})," takes the following arguments:"]}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"configConstructor"}),": A ",(0,a.jsx)(e.a,{href:"/chatbot/reference/evaluation/modules#configconstructor",children:(0,a.jsx)(e.code,{children:"ConfigConstructor"})})," function that returns a configuration object."]}),"\n",(0,a.jsxs)(e.li,{children:[(0,a.jsx)(e.code,{children:"pipeline"}),": A ",(0,a.jsx)(e.a,{href:"/chatbot/reference/evaluation/modules#pipeline",children:(0,a.jsx)(e.code,{children:"Pipeline"})})," function that defines the pipeline based on actions in the configuration."]}),"\n"]}),"\n",(0,a.jsxs)(e.p,{children:["Example ",(0,a.jsx)(e.code,{children:"runPipeline()"})," function call with its ",(0,a.jsx)(e.code,{children:"ConfigConstructor"})," and ",(0,a.jsx)(e.code,{children:"Pipeline"}),":"]}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{className:"language-ts",children:'// somePipeLine.ts\nimport {\n  runPipeline,\n  ConfigConstructor,\n  EvalConfig,\n  makeMongoDbCommandMetadataStore,\n  makeMongoDbGeneratedDataStore,\n  makeGenerateConversationData,\n  makeEvaluateConversationQuality,\n  makeMongoDbEvaluationStore,\n  makeMongoDbReportStore,\n  mongodbResponseQualityExamples,\n  reportStatsForBinaryEvalRun,\n  makeEvaluateConversationFaithfulness,\n} from "mongodb-chatbot-evaluation";\n\nconst configConstructor: ConfigConstructor = async () => {\n  // ... set up the configuration\n\n  return {\n    metadataStore: makeMongoDbCommandMetadataStore(storeDbOptions),\n    generatedDataStore: makeMongoDbGeneratedDataStore(storeDbOptions),\n    evaluationStore: makeMongoDbEvaluationStore(storeDbOptions),\n    reportStore: makeMongoDbReportStore(storeDbOptions),\n\n    commands: {\n      generate: {\n        conversations: {\n          type: "conversation",\n          testCases: allTestCases,\n          generator: makeGenerateConversationData({\n            conversations,\n            httpHeaders: {\n              Origin: "Testing",\n            },\n            apiBaseUrl: CONVERSATIONS_SERVER_BASE_URL,\n          }),\n        },\n      },\n      evaluate: {\n        conversationQuality: {\n          evaluator: makeEvaluateConversationQuality({\n            deploymentName: OPENAI_CHAT_COMPLETION_DEPLOYMENT,\n            openAiClient: new OpenAIClient(\n              OPENAI_ENDPOINT,\n              new AzureKeyCredential(OPENAI_API_KEY)\n            ),\n            fewShotExamples: mongodbResponseQualityExamples,\n          }),\n        },\n        conversationFaithfulness: {\n          evaluator: makeEvaluateConversationFaithfulness({\n            llamaIndexLlm: llamaIndexEvaluationLlm,\n          }),\n        },\n      },\n      report: {\n        conversationQualityRun: {\n          reporter: reportStatsForBinaryEvalRun,\n        },\n        conversationFaithfulnessRun: {\n          reporter: reportStatsForBinaryEvalRun,\n        },\n      },\n    },\n  } satisfies EvalConfig;\n};\n\nrunPipeline({\n  configConstructor,\n  pipeline: async (generate, evaluate, report) => {\n    // Generate data for evaluation\n    const { _id: genRunId } = await generate("conversations");\n\n    // Evaluate and report on the generated data\n    const { _id: qualityEvalRunId } = await evaluate(\n      "conversationQuality",\n      genRunId\n    );\n    await report("conversationQualityRun", qualityEvalRunId);\n\n    // Another evaluation and report on the generated data\n    const { _id: faithfulnessEvalRunId } = await evaluate(\n      "conversationFaithfulness",\n      genRunId\n    );\n    await report("conversationFaithfulnessRun", faithfulnessEvalRunId);\n  },\n});\n'})}),"\n",(0,a.jsx)(e.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsxs)(e.ul,{children:["\n",(0,a.jsx)(e.li,{children:(0,a.jsx)(e.a,{href:"https://github.com/mongodb/chatbot/tree/main/packages/chatbot-eval-mongodb-public/src/pipelines",children:"MongoDB AI chatbot evaluation pipelines"})}),"\n"]})]})}function p(n={}){const{wrapper:e}={...(0,o.a)(),...n.components};return e?(0,a.jsx)(e,{...n,children:(0,a.jsx)(u,{...n})}):u(n)}},11151:(n,e,t)=>{t.d(e,{Z:()=>s,a:()=>r});var a=t(67294);const o={},i=a.createContext(o);function r(n){const e=a.useContext(i);return a.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),a.createElement(i.Provider,{value:e},n.children)}}}]);